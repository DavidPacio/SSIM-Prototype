/* \SSIM Proto\Docs\Taxonomy DB.txt

2018.10.12 Started

TX DB Tables and Notes
======================
Assumes a separate DB per Taxonomy.
Taxonomy DB wip 1.txt filed 2018.10.14 was a start on using one DB for all XBRL Taxonomies with an OntId column to identify entries. Decided to revert to B work of a separate DB per taxonomy, as least for the SSIM Poto

The capitalisation 'code' for the first letter of DB table column names is:
l/c = original xml name used
u/c = own name, usually when something is stored as an enum rather than a string for efficiency, like SignN or TesgN

Though case does not matter in where clauses entered for any of the list modules. It does matter, however, in php code accesses query results, as a case difference will cause an error.

XBRL Specifications: https://specifications.xbrl.org/specifications.html

ToDo
====

Tables
======
Roles
Arcroles
Arcs
Elements
Imports
Namespaces
Resources

Hypercubes
Dimensions
DimensionMembers

Tables which were not used with final IFRS work
AttributeGroups
Attributes
Names
SimpleTypes
ComplexTypes
Unions
Text

*/

###########
## Roles ## See also the XBRL Registry https://specifications.xbrl.org/registries/lrr-2.0/index.html
###########
CREATE TABLE Roles (
  Id          smallint unsigned not null auto_increment,
  Role        tinytext          not null, # Role uri with http://, www. etc stripped to leave only what is necessary to identify the role
  UsedOn      tinytext          not null, # link:usedOn [1..*]  Can be more than one, CS
  definition  tinytext              null, # 10 - Profit and Loss Account
  Uses        smallint unsigned not null, # Number of uses
  FileIds     text              not null, # csv list of Imports.Id(s) of file(s) where defined
  Primary Key (Id)
) CHARSET=utf8;


##############
## Arcroles ## Created from ArcroleType nodes
############## See also the XBRL Registry https://specifications.xbrl.org/registries/lrr-2.0/index.html
CREATE TABLE Arcroles (
  Id            tinyint  unsigned not null auto_increment,
  Arcrole       tinytext          not null, # Arcrole uri with http://, www. etc stripped to leave only what is necessary to identify the arcrole. max lngth 23
  UsedOnN       tinyint  unsigned not null, # link:usedOn [1..*]   TLTN_Definition ....
  definition    tinytext              null, # 10 - Profit and Loss Account  max length 155
  PacioDef      tinytext          not null, # Short Pacio definition
  cyclesAllowed tinytext              null, # cyclesAllowed [1..1] Anonymous max length  10 none | undirected  (any not used in UK GAAP)
  Uses          smallint unsigned not null, # Number of uses
  FileIds       text              not null, # csv list of Imports.Id(s) of file(s) where defined
  Primary Key (Id)
) CHARSET=utf8;
/*
## ArcroleType ## http://www.schemacentral.com/sc/xbrl21/e-link_arcroleType.html
No separate table. The Info is used to create Arcroles entries.

link:arcroleType
  The arcroleType element is used to define custom arc role values in XBRL extended links.

5.1.4 Defining custom arc role types – the arcroleType element

The arcroleType element contains a custom arc role definition. The arcroleType element describes the custom arc role type by declaring the arc role value, declaring the elements that the arc role type may be used on, declaring the type of cycles that are allowed for a network of relationships using the arc role type, and providing a human-readable definition of the meaning of the arc role type.

The arcroleType element MUST be among the set of nodes identified by the [XPATH] path "//xsd:schema/xsd:annotation/xsd:appinfo/*”. The arc role values defined by this specification (as standard arc role values) MUST NOT be redefined using the arcroleType element.

There MUST NOT be more than one arcroleType element with the same arcroleURI attribute value within a taxonomy schema. Within a DTS, there MAY be more than one arcroleType element with the same arcroleURI attribute value. However, all arcroleType elements with the same arcroleURI attribute value MUST be s-equal.

The value of the arcroleURI identifies the xlink:arcrole attribute value that is being defined. The values of the usedOn sub-elements identify which arcs may use this arc role type. Because arcroleType elements are pointed to via an arcroleRef element in linkbases that use the custom arc role value, the arcroleType element MAY have an id attribute.

Properties: Global, Qualified
Type: Anonymous

Content
  Sequence [1..1]
    link:definition [0..1] The element to use for human-readable definition of custom roles and arc roles.
    link:usedOn [1..*]     Definition of the usedOn element - used to identify what elements may use a taxonomy defined role or arc role value.

Attributes
Name          Occ    Type  Description  Notes
arcroleURI    [1..1] xl:nonEmptyURI
id            [0..1] xsd:ID
cyclesAllowed [1..1] Anonymous
Sample Instance

<link:arcroleType arcroleURI="http://www.example.com/" cyclesAllowed="any">
   <link:definition>string</link:definition>
   <link:usedOn>QName</link:usedOn>
</link:arcroleType>

<arcroleType id="hypercube-dimension" cyclesAllowed="none" arcroleURI="http://xbrl.org/int/dim/arcrole/hypercube-dimension">
  <definition>Source (a hypercube) contains the target (a dimension) among others.</definition>
  <usedOn>definitionArc</usedOn>
</arcroleType>
*/

##########
## Arcs ## http://www.schemacentral.com/sc/xbrl21/e-link_presentationArc.html
########## http://www.xbrl.org/Specification/XBRL-2.1/REC-2003-12-31/XBRL-2.1-REC-2003-12-31+corrected-errata-2013-02-20.html#_3.5.3.9
# http://www.datypic.com/sc/xbrl21/e-link_calculationArc.html
CREATE TABLE Arcs (
  Id          mediumint unsigned not null auto_increment,
  TltN         tinyint  unsigned not null, # Taxonomy Link Type Enum: TLTN_Definition 1 | TLTN_Presentation 2 | TLTN_Calculation 3 | TLTN_Label 4 | TLTN_Reference 5 | TLTN_GenLink 6 | TLTN_Footnote
  FromId       smallint unsigned not null, # Elements.Id | Resources.Id | Roles.Id   [1..1] xsd:NCName
  ToId         smallint unsigned not null, # Elements.Id | Resources.Id | Roles.Id   [1..1] xsd:NCName
  PRoleId      smallint unsigned not null, # Roles.Id of the parent <presentationLink, <definitionLink etc  TRId_StdLabel 1, TRId_VerboseLabel 2 ...
  ArcroleId    tinyint  unsigned not null, # Arcroles.Id for xlink:arcrole [1..1] Anonymous  TARId_HypercubeDim | TARId_DimDomain | TARId_DimDomain ...
 #TitleId      smallint unsigned     null, # Text.Id     for xlink:title   [0..1] xsd:string  Non in IFRS
  ArcOrder     int      unsigned     null, # for order [0..1] xsd:decimal * 1000000 re use of 6 decimals e.g. 1.999795
  ArcUseN      tinyint  unsigned     null, # for use   [0..1] xl:useEnum   | NULL 11892 | TAUN_Optional 13911 | TAUN_Prohibited 50 - not used by IFRS but was used by the UK taxonomies
  priority     tinyint  unsigned     null, # priority  [0..1] xsd:integer
  Weight       int      unsigned     null, # for calaculation weight [1..1]  xsd:decimal * 1000000 re decimals
  PrefLabelRoleId smallint unsigned   null, # Roles.Id   for preferredLabel [0..1] Anonymous, these actually being roles e.g. http://www.xbrl.org/2003/role/label | http://www.xbrl.org/2003/role/periodStartLabel etc
#                                          Any attribute   [0..*] Some 'any' follow
  ClosedB      tinyint  unsigned     null, # xbrldt:closed         "true" stored as 1
  ContextN     tinyint  unsigned     null, # for xbrldt:contextElement       | NULL 25807 | TCN_Segment I TCN_Scenario
  UsableB      tinyint  unsigned     null, # for xbrldt:usable default true  | NULL 25832 | false
  TargetRoleId smallint unsigned     null, # Roles.Id for xbrldt:targetRole  <=== Used only with Hypercubes. All Arcs with ArcroleId=7 TARId_HypercubeDim, 191 of them
  FileId       smallint unsigned not null, # Imports.Id of the linkbase file where defined - info purposes only
  Primary Key (Id),
          Key (TltN),      # Not needed as a key since ArcroleId covers it. See the TRId_ constants. Remove from table?
          Key (FromId),
          Key (ToId),
          Key (PRoleId),
          Key (ArcroleId),
          Key (ArcOrder)
) CHARSET=utf8;

# Taxonomy Link Type enums  LinkTypeToStr() gives string form
# ------------------------
const TLTN_Definition   = 1; # <definitionLink
const TLTN_Presentation = 2; # <presentationLink
const TLTN_Calculation  = 3; # <calculationLink
const TLTN_Label        = 4; # <labelLink
const TLTN_Reference    = 5; # <referenceLink
const TLTN_GenLink      = 6; # <gen:link
#onst TLTN_Footnote     = x; # <footnoteLink

Arc From type can be deduced from Arcs.TltN, for IFRS anyway:
TltN                 From Type
TLTN_Definition   /- element
TLTN_Presentation |
TLTN_Calculation  |
TLTN_Label        |
TLTN_Reference    |
TLTN_GenLink      -  role

Arc To type can be deduced from Arcs.TltN and Arcs.ArcroleId as follows:
TltN                 To Type
TLTN_Definition   /- element
TLTN_Presentation |
TLTN_Definition   |
TLTN_Calculation  |
TLTN_Label        -  label resource
TLTN_Reference    -  reference resource
TLTN_GenLink      -  label or reference resource according to arcroleId TARId_ElementLabel or TARId_ElementRef

One arc statement can result in multiple entries in this table as per the one ot many or many to many examples below.

<presentationArc xlink:type="arc" xlink:arcrole="http://www.xbrl.org/2003/arcrole/parent-child" xlink:from="uk-gaap_ProfitLossAccountHeading" xlink:to="uk-gaap_ProfitLossFormat1Heading" order="17" use="optional" />
<definitionArc xlink:type="arc" xlink:arcrole="http://xbrl.org/int/dim/arcrole/dimension-domain" xlink:from="uk-gaap_FinancialInstrumentValueTypeDimension" xlink:to="uk-gaap_ValueTypeHeading" xlink:title="definition: FinancialInstrumentValueTypeDimension to ValueTypeHeading" order="2" use="optional" xbrldt:usable="false" />
<definitionArc xlink:type="arc" xlink:arcrole="http://xbrl.org/int/dim/arcrole/all" xlink:from="uk-gaap_ItemsInheritingBasicDimensions" xlink:to="uk-gaap_BasicHypercube" order="1" use="optional" xbrldt:contextElement="segment" xbrldt:closed="true" />
<definitionArc xlink:type="arc" xlink:arcrole="http://xbrl.org/int/dim/arcrole/hypercube-dimension" xlink:from="uk-gaap_BasicHypercube" xlink:to="uk-gaap_RestatementsDimension" order="1" use="optional" xbrldt:targetRole="http://www.xbrl.org/uk/role/Dimension-Restatements" />

link:presentationArc
     Element Information

3.5.3.9  Arcs http://www.xbrl.org/Specification/XBRL-2.1/REC-2003-12-31/XBRL-2.1-REC-2003-12-31+corrected-errata-2013-02-20.html#_3.5.3.9

All XBRL extended links MAY contain arcs. Arcs document relationships between resources identified by locators in extended links
or occurring as resources in extended links.

Arcs represent relationships between the XML fragments referenced by their [XLINK] attributes: xlink:from and xlink:to. The xlink:from
and the xlink:to attributes represent each side of the arc.  These two attributes contain the xlink:label attribute values of locators
and resources within the same extended link as the arc itself.  For a locator, the referenced XML fragments comprise the set of XML
elements identified by the xlink:href attribute on the locator. For a resource, the referenced XML fragment is the resource element itself.

An arc MAY reference multiple XML fragments on each side (“from” and “to”) of the arc. This can occur if there are multiple locators and/or
resources in the extended link with the same xlink:label attribute value identified by the xlink:from or xlink:to attribute of the arc.
Such arcs represent a set of one-to-one relationships between each of the XML fragments on their “from” side and each of the XML fragments
on their “to” side.

Example 2. One-to-One arc relationships [XLINK] [Simplified with unnec stuff removed]
---------------------
This presentation link contains an arc that relates one XBRL concept to one other XBRL concept.
The XML fragment on the “from” side is the conceptA element definition, found in the example.xsd taxonomy schema.
The XML fragment on the “to” side is the conceptB element definition, also found in the example.xsd taxonomy schema.

<presentationLink  role="link">
  <loc type="locator" label="a" href="example.xsd#conceptA"/>
  <loc type="locator" label="b" href="example.xsd#conceptB"/>
  <presentationArc from="a" to="b" arcrole="parent-child" order="1"/>
</presentationLink>

Example 3. One-to-Many arc relationships [XLINK] [Simplified with unnec stuff removed]
----------------------
This label link contains a single arc that relates one XBRL concept to two XBRL labels.
This is accomplished by giving each of the label resources the same xlink:label attribute value, which, in turn,
is the same as the xlink:to attribute value on the arc. The arc represents two relationships, one between conceptA
and the standard label (“Concept A”) and another between conceptA and the total label (“Total of Concept A”).

<labelLink role="link">
  <loc label="a" href="example.xsd#conceptA"/>
  <label label="lab_a" role="label">Concept A</label>
  <label label="lab_a" role="totalLabel">Total of Concept A</label>
  <labelArc from="a" to="lab_a" arcrole="concept-label"/>
</labelLink>

This extended link could also express the same two relationships but be written with separate label attribute values for each label and two arcs.
<labelLink role="link">
  <loc label="a" href="example.xsd#conceptA"/>
  <label label="lab_a_standard" role="label">Concept A</label>
  <label label="lab_a_total" role="totalLabel">Total of Concept A</label>
  <labelArc from="a" to="lab_a_standard" arcrole="concept-label"/>
  <labelArc from="a" to="lab_a_total"    arcrole="concept-label"/>
</labelLink>

Semantically, these two extended links represent the same set of relationships between the concept and its labels.

Example 4. Many-to-Many arc relationships [XLINK] [Simplified with unnec stuff removed]
-----------------------
This label link contains a single arc that relates two concepts to two labels.  This is accomplished by each of the locators for the concepts having
the same label attribute value, which in turn is the same as the from attribute value on the arc, and by each of the label resources
having the same label attribute value, which in turn is the same as the to attribute value.

<labelLink role="link">
  <loc label="ab" href="example.xsd#conceptA"/>
  <loc label="ab" href="example.xsd#conceptB"/>
  <label label="lab_ab" role="label">Concept A or B</label>
  <label label="lab_ab" role="totalLabel">Total of Concept A or B</label>
  <labelArc from="ab" to="lab_ab" arcrole="concept-label"/>
</labelLink>

The arc represents 4 relationships as follows:
1. between conceptA and the label resource “Concept A or B”
2. between conceptA and the label resource “Total of Concept A or B”
3. between conceptB and the label resource “Concept A or B”
4. between conceptB and the label resource “Total of Concept A or B”

Like the one-to-many example, this extended link could be re-written as 4 one-to-one arcs, where each locator and each resource has a unique
label attribute value. It could also be re-written as two one-to-two arcs where the label resources have the same label attribute
value and the locators have unique label attribute values or vice versa.

See spec for more on priority, use etc

Element Information
Namespace: http://www.xbrl.org/2003/linkbase
Schema Document: xbrl-linkbase-2003-12-31.xsd
Properties: Global, Qualified
Type: Anonymous

Content: Empty content

Attributes
Name           Occ    Type        Description  Notes
xlink:type     [1..1] Anonymous    Fixed value of "arc" so not stored
xlink:from     [1..1] xsd:NCName
xlink:to       [1..1] xsd:NCName
xlink:arcrole  [1..1] Anonymous
xlink:title    [0..1] xsd:string  - optional
xlink:show     [0..1] Anonymous   - optional /- Not used by UK GAAP
xlink:actuate  [0..1] Anonymous   - optional |
order          [0..1] xsd:decimal - optional
use            [0..1] xl:useEnum  - optional
priority       [0..1] xsd:integer - optional
Any attribute  [0..*]             Namespace: ##other, Process Contents: lax  inherited from xl:arcType
preferredLabel [0..1] Anonymous

Used In
  Anonymous type of element link:presentationLink
  Type xl:extendedType

Substitution Hierarchy
  xl:arc
     can be substituted with link:presentationArc

<presentationArc xlink:type="arc" xlink:arcrole="http://www.xbrl.org/2003/arcrole/parent-child" xlink:from="uk-gaap_ProfitLossAccountHeading" xlink:to="uk-gaap_ProfitLossFormat1Heading" order="17" use="optional" />

-----

link:definitionArc  http://www.schemacentral.com/sc/xbrl21/e-link_definitionArc.html
     Concrete arc for use in definition extended links.

Element Information
Namespace: http://www.xbrl.org/2003/linkbase
Schema Document: xbrl-linkbase-2003-12-31.xsd
Properties: Global, Qualified
Type: xl:arcType                  <==== Only difference from presentationArc??

Content: Empty content

Attributes
Name          Occ    Type        Description  Notes
xlink:type    [1..1] Anonymous    Fixed value is "arc".
xlink:from    [1..1] xsd:NCName
xlink:to      [1..1] xsd:NCName
xlink:arcrole [1..1] Anonymous
xlink:title   [0..1] xsd:string
xlink:show    [0..1] Anonymous
xlink:actuate [0..1] Anonymous
order         [0..1] xsd:decimal
use           [0..1] xl:useEnum
priority      [0..1] xsd:integer
Any attribute [0..*] Namespace: ##other, Process Contents: lax

Used In
 Anonymous type of element link:definitionLink
 Type xl:extendedType

Substitution Hierarchy
  xl:arc
    can be substituted with link:definitionArc

End Arcs

###############
## Resources ## Holds Label and Reference resources
############### See unused Labels and References tables for notes re Labels and References
CREATE TABLE Resources (
  Id      smallint unsigned not null auto_increment,
  RoleId  smallint unsigned not null, # Roles.Id for xlink:role  [0..1] Anonymous  TRId_StdLabel | TRId_VerboseLabel | TRId_TerseLabel | TRId_Documentation | TRId_NetLabel | TRId_TotalLabel | TRId_NegLabel | TRId_NegTerseLabel | TRId_NegTotalLabel | TRId_PeriodStartLabel | TRId_PeriodEndLabel | TRId_Reference | TRId_DisclosureRef | TRId_ExampleRef | TRId_CommonPracticeRef
  Text    text              not null, # Label or reference content
  FileId  smallint unsigned not null, # Imports.Id of the linkbase file where defined - info purposes only
  Primary Key (Id)
) CHARSET=utf8;

RoleId Identifies whether the resource is a label or a reference:
Label: RoleId in range TRId_StdLabel to TRId_PeriodEndLabel
Ref:   RoleId in range TRId_Reference to TRId_CommonPracticeRef

##############
## Elements ## http://www.schemacentral.com/sc/xsd/e-xsd_element-1.html
##############
CREATE TABLE Elements (
  Id            smallint unsigned not null auto_increment,
  NsId          tinyint  unsigned not null, # Namespaces.Id of the target namespace of the schema
  TetN          tinyint  unsigned     null, # TETN_* enum for element type e.g. TETN_Money, TETN_String ....
  TesgN         tinyint  unsigned     null, # TESGN_* enum for substitutionGroup e.g. TESGN_Item ....
# IdId          smallint unsigned     null, # Ids.Id   for id   [0..1] xsd:ID       When used it is name with prefix e.g. uk-gaap_AccountancyFeesAdministrativeExpenses. Was to have been Id of Ids table but not useful so not Ids table not kept.
# NameId        smallint unsigned not null, # Names.Id for name [0..1] xsd:NCName   Replaced by following
  name          varchar(500)      not null,
  StdLabel      text                  null, # 4992 of them in IFRS 2018
  TerseLabel    text                  null, # Only 19 of them in IFRS 2018
  PeriodN       tinyint  unsigned     null, # TEPTN_* enum for periodType - TEPTN_None (null) | TEPTN_Instant | TEPTN_Duration
  SignN         tinyint  unsigned     null, # TSB_*  enum for balance   - TESN_None (null)  | TESN_Dr    | TESN_Cr
  abstract      tinyint  unsigned     null, # abstract                      Default "false". True stored as 1
  nillable      tinyint  unsigned     null, # nillable  [0..1] xsd:boolean  Default "false". True stored as 1
# DocId         smallint unsigned     null, # Text.Id for element documentation though spec says not required to show doc other than via labels - not stored
  Hypercubes     tinytext             null, # List of hypercubes for this element as Hypercubes.Id in csv form. Max # for IFRS is 8
  typedDomainRef tinytext             null, # xbrldt:typedDomainRef re a typed dimension
  FileId        tinyint  unsigned not null, # Imports.Id of the schema file where defined - info purposes only. Is the same as Schema.Id
  Primary Key (Id),
          Key (name)                     # Can have duplicate names, one concrete, one abstract e.g. documentation. Found can have other
#  Unique Key NameIdNsId (NameId,NsId)   #  duplicate names with abstract the same but ns and thus id different e.g. OrdinaryShareClass1
) CHARSET=utf8;
  #  id is not mandatory, but NameId,NsId works as a unique key if required.
                                         #  For now using just NameId as name will be the most common lookup key other than Id
                                         #  May find it desirable to add Nsid and/or the unique key, and/or possibly IdId
# Max length:
# select max(length(name)) from Elements => 234 for Id 3274:
# IncreaseDecreaseThroughReclassificationAdjustmentsInPeriodReserveOfGainsAndLossesOnFinancialAssetsMeasuredAtFairValueThroughOtherComprehensiveIncomeRelatedToInsuranceContractsToWhichParagraphsC18bC19bC24bAndC24cOfIFRS17HaveBeenApplied

# Query re unique names
# SELECT N.name, E.Id,E.abstract,E.NsId,E2.Id,E2.abstract,E2.NsId FROM elements E join Elements E2 on E.NameId=E2.NameId join Names N on E.NameId=N.Id where E.Id < E2.Id order by N.Id

Notes:
- concept elements must have an id

End Element

#############
## Imports ##
#############
CREATE TABLE Imports (
  Id       smallint unsigned not null auto_increment,
  Location varchar(150)      not null, # schemaLocation in case of <import
  Num      smallint unsigned not null default 1, # count of times
  FileIds  text                  null, # csv list of Imports.Id(s) of file(s) where defined
  Primary Key (Id),
   Unique Key (Location)
) CHARSET=utf8;


################
## Namespaces ##
################
CREATE TABLE Namespaces (
  Id        tinyint  unsigned not null auto_increment,
  namespace varchar(80)       not null,
  Prefix    tinytext              null, # ifrs-full
 #Tag       varchar(12)           null, # first tag defining the namespace
  Num       smallint unsigned not null default 1, # count of times defined
  FileIds   text              not null, # csv list of Imports.Id(s) of file(s) where defined
  Primary Key (Id),
   Unique Key (namespace)
) CHARSET=utf8;


################
## Hypercubes ## Table built by BuildHypercubesDimensions.php
################
CREATE TABLE Hypercubes (
  Id         smallint unsigned not null auto_increment,
  ElId       smallint unsigned not null, # Elements.Id of the hypercube
  RoleId     smallint unsigned not null, # Roles.Id    of the hypercube = Arcs.PRoleId.  Can have multiple roles for the same hypercube dimension  - see notes below
  Dimensions tinytext          not null, # List of dimensions for this hypercube as Dimensions.Id in csv form.
  Primary Key (Id)                       #  Max number of dimensions per hypercube is 9 for IFRS
) CHARSET=utf8;

Re RoleId
Usually the RoleId is the same for all dimensions of a hypercube, but in IFRS there are 4 cases where there are two roles as below:

                         TARId_HypercubeDim
Select * From Arcs Where ArcroleId=1 Order by FromId,PRoleId,ToId,TargetRoleId

For IFRS gives in part:
Id  TltN  FromId ToId PRoleId ArcroleId ArcOrder ....
6382  2   2296   531   27     1  ...
6394  2   2296   531   28     1  ...

TltN 2 = TLTN_Definition
Hy El:2296 EarningsPerShareTable
Dim El:531 ClassesOfOrdinarySharesAxis

PRoleId 27 [310000] Statement of comprehensive income, profit or loss, by function of expense
        28 [320000] Statement of comprehensive income, profit or loss, by nature of expense

ArcroleId 1 = TARId_HypercubeDim

Have dim Id 531 twice for hypercube id 2296 distinguished by PRole

Cope with this by having two entries in the Hypercubes table with the same ElId and Dimensions string

The 4 IFRS cases are:
* Same hypercube ElId 1942 but pRoleId has changed from 68 to 108
  86 1942 DisclosureOfJointVenturesTable ([825480] Notes - Separate financial statements [R 68])
* Same hypercube ElId 2175 but pRoleId has changed from 70 to 106
  132 2175 DisclosureOfSignificantInvestmentsInAssociatesTable ([825480c] Notes - Separate financial statements [R 70])
* Same hypercube ElId 2179 but pRoleId has changed from 69 to 104
  134 2179 DisclosureOfSignificantInvestmentsInSubsidiariesTable ([825480a] Notes - Separate financial statements [R 69])
* Same hypercube ElId 2296 but pRoleId has changed from 27 to 28
  148 2296 EarningsPerShareTable ([310000] Statement of comprehensive income, profit or loss, by function of expense [R 27])


################
## Dimensions ## Table built by BuildHypercubesDimensions.php
################
CREATE TABLE Dimensions (
  Id      smallint unsigned not null auto_increment,
  ElId    smallint unsigned not null, # Elements.Id of the dimension
  RoleIds tinytext          not null, # Roles.Ids of the dimension's parent role(s) from Arcs.PRoleId. In IFRS anyway there can be multiple roles per dimension
  Primary Key (Id)
) CHARSET=utf8;

######################
## DimensionMembers ## Table built by BuildHypercubesDimensions.php
######################
CREATE TABLE DimensionMembers (
  Id      smallint unsigned not null auto_increment, # Used as DiMeId
  DimId   smallint unsigned not null, # Dimensions.Id of the dimension
  ElId    smallint unsigned not null, # Elements.Id of the dimension member
  RoleId  smallint unsigned not null, # Roles.Id of the dimension member - re possible multiple roles per dimension
  Bits    tinyint  unsigned not null, # Dimension Member bits: DMB_Default ... defined ConstantsRgUK-GAAP
  Level   tinyint  unsigned not null, # Level of the DiMe from 0 upwards re Dimension Map and summing
  Primary Key (Id),
          Key (DimId) # not unique
) CHARSET=utf8;


############################################################
# Tables to store XBRL elements which are not used by SSIM #
############################################################

##################
## ComplexTypes ##
##################
CREATE TABLE ComplexTypes (
  Id                 tinyint  unsigned not null auto_increment,
  name               varchar(40)           null,
  final              varchar(20)       not null,
# extensionBase      varchar(20)       not null,
  attributeGroupRef  varchar(40)           null, # Only 1: xbrli:essentialNumericItemAttrs on fractionItemType   extension
  mixed              tinyint unsigned      null, # true stored as 1
  xmlns              varchar(80)           null, # xmlns="http://www.w3.org/2001/XMLSchema"
  anyAttributeJson   varchar(120)          null, # json for <anyAttribute namespace="http://www.w3.org/XML/1998/namespace" processContents="lax" />
  attributesJson     text                  null,
  choiceJson         text                  null,
  complexContentJson text                  null,
  simpleContentJson  text                  null,
  sequenceJson       text                  null,
  SchemaId           tinyint  unsigned not null, # Schemas.Id of schema where defined
  Doc                varchar(255)          null,
  Primary Key (Id),
   Unique Key (name)
) CHARSET=utf8;

#################
## SimpleTypes ##
#################
CREATE TABLE SimpleTypes (
  Id           tinyint  unsigned not null auto_increment,
  name         varchar(40)           null,
  base         varchar(20)       not null,
  minLength    tinyint  unsigned     null, # Used with base = 'anyURI'
  minExclusive tinyint  unsigned     null, # Used with base = 'decimal'
  maxExclusive smallint unsigned     null, # "                           djh?? Also tiny?
  EnumList     varchar(80)           null, # csv list of enumeration values for base = 'token' and 'string'
  UnionId      tinyint  unsigned     null, # Unions.Id if the simpleType is a union
  SchemaId     varchar(20)       not null, # csv list of Schema.Id(s) of schema(s) where defined
  Doc          varchar(255)          null,
  Primary Key (Id),
   Unique Key (name)
) CHARSET=utf8;


############
## Unions ##
############
CREATE TABLE Unions (
  Id            tinyint unsigned not null auto_increment,
  memberTypes   varchar(20)          null,
  SimpleType1Id tinyint unsigned     null, # SimpleTypes.Id
  SimpleType2Id tinyint unsigned     null, # SimpleTypes.Id if the unions has a second simple type
  SchemaId      varchar(20)      not null, # csv list of Schema.Id(s) of schema(s) where defined
  Primary Key (Id),
   Unique Key (memberTypes)
) CHARSET=utf8;

### <============= Up to here

//////////////////////////////////
// XBRL elements with no tables //
//////////////////////////////////

//////////////
// Linkbase // http://www.schemacentral.com/sc/xbrl21/e-link_linkbase.html
//////////////
No table. Namespaces and Imports are updated. No other new info.

<linkBase

Choice [0..*]
  link:documentation Concrete element to use for documentation of extended links and linkbases.
  link:roleRef       Definition of the roleRef element used to resolve xlink:role attribute values to the roleType element declaration.
  link:arcroleRef    Definition of the roleRef element used to resolve xlink:arcrole attribute values to the arcroleType element declaration.

subst. group xl:extended  http://www.schemacentral.com/sc/xbrl21/e-xl_extended.html
  link:presentationLink   presentation extended link element definition.
  link:definitionLink     definition extended link element definition
  link:calculationLink    calculation extended link element definition
  link:labelLink          label extended link element definition
  link:referenceLink      reference extended link element definition
  link:footnoteLink       footnote extended link element definition

Attributes
Name  Occ  Type  Description  Notes
id    [0..1]  xsd:ID
Any attribute  [0..*]    Namespace: http://www.w3.org/XML/1998/namespace, Process Contents: lax
Sample Instance

<linkbase xmlns="http://www.xbrl.org/2003/linkbase" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xlink="http://www.w3.org/1999/xlink" xsi:schemaLocation=" http://www.xbrl.org/2003/linkbase http://www.xbrl.org/2003/xbrl-linkbase-2003-12-31.xsd">


///////////////
// RoleTypes // http://www.schemacentral.com/sc/xbrl21/e-link_roleType.html
///////////////
No separate table as of 31.03.11. The Info is used to create Roles entries.

<link:roleType
The roleType element is used to define custom role values in XBRL extended links.

5.1.3 Defining custom role types – the roleType element
The roleType element contains a custom role type definition. The roleType element describes the custom role type by defining the
roleURI of the role type, declaring the elements that the role type may be used on, and providing a human-readable definition of the role type.

Role types define custom values for the xlink:role attribute on the [XLINK] extended link and resource elements. The roleType element MUST be
located among the set of nodes identified by the [XPATH] path "//xsd:schema/xsd:annotation/xsd:appinfo/*". The role values that are defined by
this specification (as standard role attribute values) MUST NOT be redefined using the roleType element.

There MUST NOT be more than one roleType element with the same roleURI attribute value within a taxonomy schema. Within a DTS, there MAY be more
than one roleType element with the same roleURI attribute value. However, all roleType elements with the same roleURI attribute value MUST be s-equal.

The value of the roleURI attribute identifies the xlink:role attribute value that is being defined. The values of the usedOn sub-elements identify
which elements are allowed to use the custom role type. Since roleType elements are pointed to via a roleRef element in linkbases that use the
custom role type, the roleType element MAY have an id attribute.

Properties: Global, Qualified
Type: Anonymous

Content
Sequence [1..1]
  link:definition [0..1] The element to use for human-readable definition of custom roles and arc roles.
  link:usedOn [1..*]     Definition of the usedOn element - used to identify what elements may use a taxonomy defined role or arc role value.

Attributes
Name    Occ  Type  Description  Notes
roleURI [1..1]  xl:nonEmptyURI
id      [0..1]  xsd:ID

<link:roleType roleURI="http://www.xbrl.org/uk/role/ProftAndLossAccount" id="IncomeStatement">
  <link:definition>10 - Profit and Loss Account</link:definition>
  <link:usedOn>link:presentationLink</link:usedOn>
</link:roleType>

//////////////
// RoleRefs // http://www.schemacentral.com/sc/xbrl21/e-link_roleRef.html
//////////////
No table as of 31.03.11 as though RoleRefs exist in the UK GAAP taxonomy they do not appear to serve any useful purpose.

<link:roleRef
The roleRef element is used to resolve xlink:role attribute values to the roleType element declaration.

3.5.2.4 The roleRef element (optional)
The roleRef element is used to resolve custom xlink:role values that are used in a linkbase or XBRL instance (for footnoteLink and footnote).
The roleRef element is a simple link, as defined in Section 3.5.1. The roleRef element points to the roleType element in a taxonomy schema document
that declares the xlink:role attribute value (see section 5.1.3).  The value, V, of the xlink:role attribute on a standard resource or extended link
element MUST be an absolute URI.  If V does not correspond to a role defined by this specification, it is a custom role; in this case the ancestor
linkbase element of the resource or extended link element MUST have a child roleRef element with V as the value of its roleURI attribute.

Note that roleRefs are only required for roles that are used on standard extended links and standard resources.
The standard extended links are those defined by this specification: definitionLink, calculationLink, presentationLink, labelLink, referenceLink
and footnoteLink.  Likewise, the standard resources are label, footnote, and reference.

Properties: Global, Qualified
Type: Anonymous

Content: Empty content

Attributes
Name  Occ  Type  Description  Notes
xlink:type    [1..1]  Anonymous    Fixed value of "simple" so not stored
xlink:href    [1..1]  xsd:anyURI
xlink:arcrole [0..1]  Anonymous   /- Not used in UK GAAP
xlink:role    [0..1]  Anonymous   |
xlink:title   [0..1]  xsd:string  |
xlink:show    [0..1]  Anonymous   |
xlink:actuate [0..1]  Anonymous   |
Any attribute [0..*]              Namespace:  http://www.w3.org/XML/1998/namespace, Process Contents: lax
roleURI       [1..1]  xl:nonEmptyURI  This attribute contains the role name.

Used In
  Anonymous type of element link:linkbase
  Anonymous type of element xbrli:xbrl

Substitution Hierarchy
  xl:simple
     can be substituted with link:roleRef

<roleRef
 xlink:type="simple"
 xlink:href="uk-gaap-2009-09-01.xsd#IncomeStatement"
 roleURI="http://www.xbrl.org/uk/role/ProftAndLossAccount" />


/////////////////
// ArcroleRefs // http://www.schemacentral.com/sc/xbrl21/e-link_arcroleRef.html
/////////////////
No table as of 31.03.11 as though ArcroleRefs exist in the UK GAAP taxonomy they do not appear to serve any useful purpose.

link:arcroleRef
  The arcroleRef element is used to resolve xlink:arcrole attribute values to the arcroleType element declaration.

3.5.2.5 The arcroleRef element (optional)

The arcroleRef element is used to resolve custom xlink:arcrole values that are used in a linkbase or an XBRL instance (for footnoteArc). The arcroleRef element is a simple link, as defined in Section 3.5.1. The arcroleRef element points to the arcroleType element in a taxonomy schema document that declares the xlink:arcrole attribute value (see section 5.1.4). The value, V, of the xlink:arcrole attribute on a standard arc element in a standard extended link element MUST be an absolute URI.  If V does not correspond to an arcrole defined by this specification, it is a custom arcrole; in this case the ancestor linkbase element of the arc element MUST have a child arcroleRef element with V as the value of its arcroleURI attribute.

Note that arcroleRefs are only required for arcroles that are used on standard arcs appearing in standard extended links.  The standard arcs are those defined by this specification: definitionArc, calculationArc, presentationArc, labelArc, referenceArc and footnoteArc.

The XML Schema definition of the arcroleRef element is shown below.

Element Information
Namespace: http://www.xbrl.org/2003/linkbase
Schema Document: xbrl-linkbase-2003-12-31.xsd
Properties: Global, Qualified
Type: Anonymous

Content: Empty content

Attributes
Name          Occ     Type  Description  Notes
xlink:type    [1..1] Anonymous  Fixed value of "simple" so not stored
xlink:href    [1..1] xsd:anyURI
xlink:arcrole [0..1] Anonymous   /- Not used in UK GAAP
xlink:role    [0..1] Anonymous   |
xlink:title   [0..1] xsd:string  |
xlink:show    [0..1] Anonymous   |
xlink:actuate [0..1] Anonymous   |
Any attribute [0..*]              Namespace: http://www.w3.org/XML/1998/namespace, Process Contents: lax  inherited from xl:simpleType
arcroleURI    [1..1] xl:nonEmptyURI  This attribute contains the arc role name.

Used In
  Anonymous type of element link:linkbase
  Anonymous type of element xbrli:xbrl

Substitution Hierarchy
  xl:simple
    can be substituted with link:arcroleRef

<arcroleRef xlink:type="simple" xlink:href="http://www.xbrl.org/2005/xbrldt-2005.xsd#dimension-domain" arcroleURI="http://xbrl.org/int/dim/arcrole/dimension-domain" />

End ArcroleRefs

////////////
// XLinks // <presentationLink <definitionLink <labelLink <referenceLink
////////////
No table as the info does not need to be stored, but is just used by BuildTaxonomyDB.php
for processing the following loc, arc, label, and reference tags.

link:presentationLink  http://www.schemacentral.com/sc/xbrl21/e-link_presentationLink.html
link:definitionLink    http://www.schemacentral.com/sc/xbrl21/e-link_definitionLink.html
link:labelLink         http://www.schemacentral.com/sc/xbrl21/e-link_labelLink.html
link:referenceLink     http://www.schemacentral.com/sc/xbrl21/e-link_referenceLink.html
     extended link element definition.

Properties: Global, Qualified

Type: Anonymous
Content
  Choice [0..*]
    link:documentation   Concrete element to use for documentation of extended links and linkbases.
    link:loc             Concrete locator element. The loc element is the XLink locator element for all extended links in XBRL.
    link:presentationArc

Attributes
Name        Occ      Type        Description  Notes
xlink:type  [1..1]  Anonymous    Fixed value of "extended" so not stored.
xlink:role  [1..1]  Anonymous
xlink:title [0..1]  xsd:string
id          [0..1]  xsd:ID
Any attribute  [0..*]  Namespace: http://www.w3.org/XML/1998/namespace, Process Contents: lax

Used In
  Anonymous type of element link:linkbase

Substitution Hierarchy
  xl:extended
     can be substituted with link:presentationLink

<presentationLink xlink:type="extended" xlink:role="http://www.xbrl.org/uk/role/ProftAndLossAccount" xlink:title="Income Statement ">

Can have identical presentationLink nodes e.g.:
  <presentationLink xlink:type="extended" xlink:role="http://www.xbrl.org/uk/role/CashFlowStatement" xlink:title="Cash Flow Statement">
  <presentationLink xlink:type="extended" xlink:role="http://www.xbrl.org/uk/role/CashFlowStatement" xlink:title="Cash Flow Statement">
with own loc and presentationArc content.

//////////////
// Locators // http://www.schemacentral.com/sc/xbrl21/e-link_loc.html
//////////////
No table as of 31.03.11 as the info does not need to be stored, but is just used by BuildTaxonomyDB.php
for processing the following arc tags.

link:loc
Concrete locator element.  The loc element is the XLink locator element for all extended links in XBRL.
Properties: Global, Qualified

Type: xl:locatorType

Content: Empty content

Attributes
Name        Occ      Type        Description  Notes
xlink:type  [1..1]  Anonymous    Fixed value of "locator" so not stored
xlink:href  [1..1]  xsd:anyURI
xlink:label [1..1]  xsd:NCName
xlink:role  [0..1]  Anonymous   Not used by UK GAAP
xlink:title [0..1]  xsd:string

Used In
  Anonymous type of element link:calculationLink
  Anonymous type of element link:definitionLink
  Anonymous type of element link:footnoteLink
  Anonymous type of element link:labelLink
  Anonymous type of element link:presentationLink
  Anonymous type of element link:referenceLink
  Type xl:extendedType

Substitution Hierarchy
  xl:locator
     can be substituted with link:loc
 <loc xlink:type="locator" xlink:href="uk-gaap-2009-09-01.xsd#uk-gaap_ProfitLossAccountHeading" <===== after href # = concept (element) id
     xlink:label="uk-gaap_ProfitLossAccountHeading" />                                          <===== loc "id"
                                                                                                <====> Always the same for UK GAAP, checked via Locators.php and wip DB
###########
## Hrefs ## http://www.schemacentral.com/sc/xlink/a-xlink_href.html
###########
No table as of 31.03.11 as hrefs were either to do with roles now stored in the Roles table, locators which are not stored,
or linkbaseRefs for which the href is stored in the Linkbaserefs table.

RoleRefs.href     # link:href [1..1] xsd:anyURI
ArcroleRefs.href  # link:href [1..1] xsd:anyURI
Locators.href     # link:href [1..1] xsd:anyURI

##########
## Uris ##
##########
No table as of 31.03.11 as Uris were all to do with roles now stored in the Roles table.

LinkbaseRefs.role       # xlink:role
RoleTypes.roleURI       # roleURI        [1..1] xl:nonEmptyURI
RoleRefs.roleURI        # roleURI        [1..1] xl:nonEmptyURI  This attribute contains the role name.
ArcroleTypes.arcroleURI # arcroleURI     [1..1] xl:nonEmptyURI  http://xbrl.org/int/dim/arcrole/hypercube-dimension
ArcroleRefs.arcroleURI  # arcroleURI     [1..1] xl:nonEmptyURI  This attribute contains the arc role name.
Arcs.arcrole            # xlink:arcrole  [1..1] Anonymous
Arcs.PreferredLabelId   # preferredLabel [0..1] Anonymous, these actually being uris
#Arcs.xbrldt_targetRole # xbrldt:targetRole
Labels.role             # xlink:role     [0..1] Anonymous
References.role         # xlink:role     [0..1] Anonymous

###########
## Names ## For xsd:NCName
###########
CREATE TABLE Names (
  Id           smallint unsigned not null auto_increment,
  name         varchar(170)      not null, # xsd:NCName  max length 167
  Defs         tinyint  unsigned not null, # Number of times defined
  Uses         smallint unsigned not null, # Number of times used i.e. referenced by an arc from or to
  Primary Key (Id),
   Unique Key (name)
) CHARSET=utf8;

Elements.name    # name        [0..1] xsd:NCName
Arcs.to          # xlink:to    [1..1] xsd:NCName for label or reference arcs
Labels.label     # xlink:label [1..1] xsd:NCName
References.label # xlink:label [1..1] xsd:NCName

#########
## Ids ## For xsd:ID fields, which should be unique i.e. defined only once.
#########
CREATE TABLE Ids (
  Id           smallint unsigned not null auto_increment,
  XId          varchar(170)      not null, # xsd:ID    max length 163
  Defs         tinyint  unsigned not null, # Number of times defined. Should be 1 but some ids are defined more than once in UK GAAP.
                                           #  To be resolved in the tidy up after the build.
  Uses         smallint unsigned not null, # Number of times used i.e. referenced by an arc from or to
  Primary Key (Id),
   Unique Key (Xid)
) CHARSET=utf8;

Elements.id      # id          [0..1] xsd:ID
Labels.id        # id          [0..1] xsd:ID
Reference.id     # id          [0..1] xsd:ID


################
## TuplePairs ## Combines the equivalent of Tuples and TupleMembers in one Table
################
CREATE TABLE TuplePairs (
  Id        smallint unsigned not null auto_increment, # Used as TuMeId: 1 to 524
  TupId     tinyint  unsigned not null, # Id of the Tuple as it would be if in a Tuples Table: 1 to 158
  TupTxId   smallint unsigned not null, # Elements.Id of the Tuple
  MemTxId   smallint unsigned not null, # Elements.Id of a Member of the Tuple
  Ordr      tinyint  unsigned not null, # Member Order within the Tuple as per its complexType sequence from 1 upwards and used with Order in tags
  minOccurs tinyint  unsigned not null, # 0 or 1 expected
  maxOccurs tinyint  unsigned not null, # 1 or 255 for unbounded expected
  TUCN      tinyint  unsigned not null, # <TUC_O | TUC_M | TUC_U> (<1 | 2 | 3>) for normal use instead of minOccurs and maxOccurs
  Primary Key (Id),
          Key (MemTxId)  # Not unique
) CHARSET=utf8;

const TUC_O = 1; # O Optional once corresponding to Taxonomy minOccurs=0 and maxOccurs=1
const TUC_M = 2; # M Mandatory once if tuple used corresponding to Taxonomy minOccurs=1 and maxOccurs=1
const TUC_U = 3; # U Optional Unbounded corresponding to Taxonomy minOccurs=0 and maxOccurs=unbounded



############
# Not Used #
############

/////////////
// Schemas //
/////////////
CREATE TABLE Schemas (
  Id                   smallint unsigned not null auto_increment,
  Location             varchar(150)      not null, # schemaLocation from <import
  targetNamespace      varchar(80)       not null,
  attributeFormDefault varchar(80)           null,
  elementFormDefault   varchar(80)           null,
  Doc                  text                  null, # <annotation><documentation> elements concatenated
  Primary Key (Id)
) CHARSET=utf8;

//////////////////
// LinkbaseRefs // http://www.schemacentral.com/sc/xbrl21/e-link_linkbaseRef.html
//////////////////
CREATE TABLE LinkbaseRefs (
  Id       smallint  unsigned not null auto_increment,
# type      varchar(6)        not null, # link:type with fixed value of "simple" so not stored
  href      varchar(120)      not null, # xlink:href [1..1] xsd:anyURI max length 72
# RoleId    smallint unsigned     null, # Uris.Id  for xlink:role Use removed 31.03.11 as it doesn't provide any useful info, just presentationLinkbaseRef etc which we don't need
  title     varchar(30)           null, # link:title  NULL  8 | Definition Links, all  8 | Label Links, all 9 | Reference Links, all  7
# arcrole   varchar(80)           null, # xlink:arcrole This attribute must have the value: http://www.w3.org/1999/xlink/properties/linkbase
# SchemaId  tinyint unsigned  not null, # Schema.Id of schema where defined Removed 29.04.11 as not ever used after build
  Primary Key (Id)
) CHARSET=utf8;


/*
From http://www.schemacentral.com/sc/xbrl21/e-link_linkbaseRef.html

Schema Central > XBRL 2.1 > xbrl-linkbase-2003-12-31.xsd > link:linkbaseRef

Definition of the linkbaseRef element - used to link to XBRL taxonomy extended links from taxonomy schema documents and from XBRL instances.

Element information
Namespace: http://www.xbrl.org/2003/linkbase           Type: Anonymous
Schema document: xbrl-linkbase-2003-12-31.xsd          Properties: Global, Qualified

Content
  • Empty content

Attributes
Name           Occ   Type        Description                                               Notes
xlink:type    [1..1] Anonymous   Fixed value is "simple". inherited from xl:simpleType     Fixed value is "simple". from type xl:simpleType
xlink:href    [1..1] xsd:anyURI                                                            from type xl:simpleType
xlink:role    [0..1] Anonymous                                                             from type xl:simpleType
xlink:title   [0..1] xsd:string                                                            from type xl:simpleType
xlink:show    [0..1] Anonymous                                                             from type xl:simpleType
xlink:actuate [0..1] Anonymous                                                             from type xl:simpleType
xlink:arcrole [1..1] Anonymous   This attribute must have the value: http://www.w3.org/1999/xlink/properties/linkbase
Any attribute [0..*] Namespace:  http://www.w3.org/XML/1998/namespace, Process Contents: lax

Used in
  • Anonymous type of element xbrli:xbrl

Substitution hierarchy
  • xl:simple
      can be substituted with link:linkbaseRef

Sample instance
<link:linkbaseRef xlink:type="simple" xlink:href="http://www.example.com/" xlink:arcrole="http://www.example.com/"/>

From IFRS 2018 full_ifrs_entry_point_2018-03-16.xsd
<link:linkbaseRef
 xlink:arcrole="http://www.w3.org/1999/xlink/properties/linkbase"
 xlink:href="full_ifrs/dimensions/dim_full_ifrs_2018-03-16_role-901000.xml"
 xlink:role="http://www.xbrl.org/2003/role/definitionLinkbaseRef"
 xlink:type="simple"/>

<link:linkbaseRef
 xlink:arcrole="http://www.w3.org/1999/xlink/properties/linkbase"
 xlink:href="full_ifrs/linkbases/sic_29/ref_sic_29_2018-03-16.xml"
 xlink:role="http://www.xbrl.org/2003/role/referenceLinkbaseRef"
 xlink:type="simple"/>


From UK 2013...
<link:linkbaseRef
 xlink:type="simple"
 xlink:href="uk-gaap-2009-09-01-presentation.xml"
 xlink:role="http://www.xbrl.org/2003/role/presentationLinkbaseRef"
 xlink:arcrole="http://www.w3.org/1999/xlink/properties/linkbase"
/>
*/

End LinkbaseRefs


/////////////////////
// AttributeGroups //
/////////////////////
CREATE TABLE AttributeGroups (
  Id               tinyint unsigned not null auto_increment,
  name             varchar(40)      not null,
  ref              varchar(40)          null, # <attributeGroup ref="xbrli:factAttrs" /> djh?? Make this RefId -> AttributeGroups.Id ?
  attributeJson    varchar(255)         null, # json for <attribute name="id" type="ID" use="optional" /> - can be multiple entries
  anyAttributeJson varchar(120)         null, # json for <anyAttribute namespace="##other" processContents="lax" />
  SchemaId         tinyint unsigned not null, # Schema.Id of schema where defined
  Doc              varchar(255)         null,
  Primary Key (Id),
   Unique Key (name)
) CHARSET=utf8;

////////////////
// Attributes // <attribute at the schema level. <attribute in a complexType is stored within the complexType
////////////////
CREATE TABLE Attributes (
  Id            tinyint unsigned not null auto_increment,
  name          varchar(40)      not null,
  SimpleTypeId  tinyint unsigned     null, # SimpleTypes.Id if the attribute is a simple type
  SchemaId      tinyint unsigned not null, # Schema.Id of schema where defined
  Doc           varchar(255)         null,
  Primary Key (Id),
   Unique Key (name)
) CHARSET=utf8;

////////////
// Labels // http://www.schemacentral.com/sc/xbrl21/e-link_label.html
//////////// The Resources table is used for both Labels and References
# <label:label xlink:label="res_1" xlink:role="http://www.xbrl.org/2008/role/label" xlink:type="resource" xml:lang="en">[913000] Axis - Consolidated, combined and separate financial statements</label:label>
CREATE TABLE Labels (
  Id          smallint unsigned not null auto_increment,
# TltN        tinyint  unsigned not null, # Not included as always TLTN_Label
# PRoleId     tinyint  unsigned not null, # Roles.Id of the parent <labelLink No need. Always link
  RoleId      tinyint  unsigned     null, # Roles.Id for xlink:role  [0..1] Anonymous
  LabelId     smallint unsigned not null, # Names.Id for xlink:label [1..1] xsd:NCName
  IdId        smallint unsigned     null, # Ids.Id   for id          [0..1] xsd:ID
  TextId      smallint unsigned not null, # Text.Id  for the content of the label
  TitleId     smallint unsigned     null, # Text.Id  for xlink:title [0..1] xsd:string
#                                           Any attribute [0..*]  Namespace: http://www.w3.org/XML/1998/namespace, Process Contents: lax
#                                           xml:lang="en" - ignored for UK GAAP
  LinkbaseId   tinyint unsigned not null, # LinkbaseRefs.Id of file where defined
  Primary Key (Id)
) CHARSET=utf8;

Notes:
- xlink:label is not unique i.e. there can be duplicates with different roles

link:label
     Definition of the label resource element.

5.2.2.2  The label element
Although each taxonomy defines a single set of elements representing a set of business reporting concepts, the human-readable XBRL documentation
for those concepts, including labels (strings used as human-readable names for each concept) and other explanatory documentation, is contained in
a resource element in the label linkbase. The resource uses the xml:lang attribute to specify the language used (via the XML standard lang attribute)
and an optional classification of the purpose of the documentation (via a role attribute).

This ability to provide documentation in a variety of different languages enables XBRL concepts to be more easily reported in a multilingual environment.

Documentation of XBRL concepts MUST be contained in label elements in labelLink extended links. The label element is an [XLINK] resource.
Its generic syntax is documented in Section 3.5.3.8. The label element MUST have the standard xml:lang attribute, and it MUST appear inside
a labelLink element. This content of the label element is mixed, allowing a simple string, a fragment of XHTML or a combination of both.

XBRL processors are NOT REQUIRED to detect or display concept documentation that appears anywhere other than in a label element.

Element Information
Namespace: http://www.xbrl.org/2003/linkbase
Schema Document: xbrl-linkbase-2003-12-31.xsd
Properties: Global, Qualified
Type: Anonymous
Content
  Any text (mixed) content, intermingled with:
  Any element [0..*] Namespace: http://www.w3.org/1999/xhtml, Process Contents: skip

Attributes
Name        Occ    Type        Description  Notes
xlink:type  [1..1] Anonymous   Fixed value of "resource" so not stored
xlink:label [1..1] xsd:NCName
xlink:role  [0..1] Anonymous
xlink:title [0..1] xsd:string
id          [0..1] xsd:ID
                   Any attribute  [0..*]    Namespace: http://www.w3.org/XML/1998/namespace, Process Contents: lax
Used In
  Anonymous type of element link:labelLink
  Type xl:extendedType

Substitution Hierarchy
  xl:resource
    can be substituted with link:label

<label id="id_541d3e" xlink:type="resource" xlink:role="http://www.xbrl.org/2003/role/documentation" xlink:label="uk-gaap_AccountTypeDimension-AppliesToAllDataHeading_lbl" xml:lang="en">Heading</label>
The id is not used anywhere

<label xlink:role="http://www.xbrl.org/2003/role/documentation" xlink:label="uk-bus_EntityCurrentLegalOrRegisteredName_lbl" xml:lang="en">Name under which entity is officially registered and identified</label>
<label xlink:role="http://www.xbrl.org/2003/role/label"         xlink:label="uk-bus_EntityCurrentLegalOrRegisteredName_lbl" xml:lang="en">Entity current legal or registered name</label>

End Labels


////////////////
// References // http://www.schemacentral.com/sc/xbrl21/e-link_reference.html
//////////////// The Resources table is used for both Labels and References
CREATE TABLE `References` (
  Id          smallint unsigned not null auto_increment,
# TltN        tinyint  unsigned not null, # Not included as always TLTN_Reference
# PRoleId     tinyint  unsigned not null, # Roles.Id of the parent <referenceLink  No need. Always link
  RoleId      tinyint  unsigned     null, # Roles.Id for xlink:role  [0..1] Anonymous
  LabelId     smallint unsigned not null, # Names.Id for xlink:label [1..1] xsd:NCName
  IdId        smallint unsigned     null, # Ids.Id   for id          [0..1] xsd:ID
  RefsJsonId  smallint unsigned not null, # Text.Id    for Refs content stored as json. Too many different subtags for individual fields!
#                                           Any attribute [0..*]  Namespace: http://www.w3.org/XML/1998/namespace, Process Contents: lax
#                                           xml:lang="en" - ignored for UK GAAP
  LinkbaseId   tinyint unsigned not null, # LinkbaseRefs.Id of file where defined
  Primary Key (Id)  # djh? other key?
) CHARSET=utf8;

link:reference
     Definition of the reference  resource element.

Element Information
Namespace: http://www.xbrl.org/2003/linkbase
Schema Document: xbrl-linkbase-2003-12-31.xsd
Properties: Global, Qualified
Type: Anonymous
Content: Any text (mixed) content

Attributes
Name        Occ    Type        Description  Notes
xlink:type  [1..1] Anonymous   Fixed value of "resource" so not stored.
xlink:label [1..1] xsd:NCName
xlink:role  [0..1] Anonymous
xlink:title [0..1] xsd:string  Not used in UK GAAP
id          [0..1] xsd:ID

Used In
  Anonymous type of element link:referenceLink
  Type xl:extendedType

Substitution Hierarchy
  xl:resource
     can be substituted with link:reference

<reference id="id_1765447" xlink:type="resource" xlink:role="http://www.xbrl.org/2003/role/reference" xlink:label="uk-gaap_AccountTypeDimension-AppliesToAllDataHeading_ref">
  <ref:Name>Common practice</ref:Name>
</reference>

<reference xlink:type="resource" xlink:role="http://www.xbrl.org/2003/role/reference" xlink:label="uk-gaap_AccountingPeriodAssociate_ref">
  <ref:Name>FRS</ref:Name>
  <ref:Number>9</ref:Number>
  <ref:Paragraph>52</ref:Paragraph>
  <ref:Subparagraph>b</ref:Subparagraph>
</reference>

# ref_Name                                # Content: <ref:Name>FRS</ref:Name>
# ref_Number                              # Content: <ref:Number>9</ref:Number>
# ref_Paragraph                           # Content: <ref:Paragraph>52</ref:Paragraph>
# ref_Subparagraph                        # Content: <ref:Subparagraph>b</ref:Subparagraph>
# ref_Section                             # Content: <ref:Section>242B</ref:Section>
# ref:Clause
# ref:Appendix
# ref:Publisher
# uk_gaap_ref_Schedule varchar(255) null, # Content: <uk-gaap-ref:Schedule>5</uk-gaap-ref:Schedule>
# uk-gaap-ref:Part                                   <uk-gaap-ref:Part>III</uk-gaap-ref:Part>
# uk-gaap-ref:Abstract
# uk-gaap-ref:Year
# uk-cd-ref:ISOName
# uk-cd-ref:Code
# uk-cd-ref:AlternativeCode
# uk-cd-ref:Date
# uk-cd-ref:Description
# uk-cd-ref:ExchangeAcronym
# uk-cd-ref:HomeCity
# uk-cd-ref:HomeCountry
# uk-cd-ref:HomeCountryCode
# uk-cd-ref:MarketIdentificationCode

End References

//////////
// Text // For larger xsd:string fields
////////// No index on text as assumed this wont be used as a key or for searching
CREATE TABLE Text (
  Id           smallint unsigned not null auto_increment,
  Text         varchar(400)      not null, # xsd:string    max length 368
  Uses         smallint unsigned not null, # Number of times used
  Primary Key (Id)
) CHARSET=utf8;

Locators.title   # xlink:title [0..1] xsd:string
Arcs.title       # xlink:title [0..1] xsd:string
Labels.Text      #                    The content of the label
Labels.title     # xlink:title [0..1] xsd:string
References.refs  # References content stored as json


########################################
# Tables not used with final IFRS work #
########################################
AttributeGroups
Attributes
ComplexTypes
LinkbaseRefs
SimpleTypes
Unions
Text
